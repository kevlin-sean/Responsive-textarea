# .github/workflows/publish-to-npmjs.yml
name: Publish Package to npmjs

on:
  release:
    types: [published] # Triggers when you publish a new Release on GitHub
  workflow_dispatch: # Allows manual triggering from the GitHub Actions page
    inputs:
      version:
        description: "Specify the version to publish (e.g., 1.0.0). Leave blank to auto-detect from package.json"
        required: false
        type: string

jobs:
  build_and_publish:
    runs-on: ubuntu-latest # Executes tasks on the latest Ubuntu runner

    permissions:
      contents: read # Allows Actions to read the repository content
      id-token: write # Enables OIDC, useful for npm >= 9.5.0 and adding provenance

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x" # Recommended LTS version
          registry-url: "https://registry.npmjs.org/" # Points to the npmjs registry

      - name: Install pnpm
        run: |
          corepack enable 
          corepack prepare pnpm@9.0.6 --activate

      - name: Install monorepo dependencies
        run: pnpm install --frozen-lockfile # Use pnpm to install monorepo dependencies
        # NODE_AUTH_TOKEN is usually not needed for npm install unless you have private packages
        # in your dependency tree, which is less common for an open-source library.
        # env:
        #   NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Build the specific component library package
      - name: Build responsive-textarea package
        # Navigate to the package and run its build script
        run: pnpm --filter responsive-textarea build

      # Publish to npmjs
      - name: Publish responsive-textarea to npmjs
        # Navigate to the built package directory and publish
        run: cd packages/responsive-textarea && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # Use the npm token for authentication

